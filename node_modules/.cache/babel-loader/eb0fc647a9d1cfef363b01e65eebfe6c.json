{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tdisu\\\\Documents\\\\REACT\\\\CRDDRS\\\\my-app\\\\src\\\\pages\\\\Dashboard\\\\Usuario\\\\Listar\\\\ListarUsuario.jsx\",\n    _s = $RefreshSig$();\n\n// import * as React from 'react';\n// import PropTypes from 'prop-types';\n// import Box from '@mui/material/Box';\n// import Collapse from '@mui/material/Collapse';\n// import IconButton from '@mui/material/IconButton';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Typography from '@mui/material/Typography';\n// import Paper from '@mui/material/Paper';\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n// import axios from 'axios';\n// import { Button, TableSortLabel } from '@mui/material';\n// import style from './ListarUsuario.module.scss'\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import { visuallyHidden } from '@mui/utils';\n// ListarUsuario.propTypes = {\n//     numSelected: PropTypes.number.isRequired,\n//     onRequestSort: PropTypes.func.isRequired,\n//     onSelectAllClick: PropTypes.func.isRequired,\n//     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//     orderBy: PropTypes.string.isRequired,\n//     rowCount: PropTypes.number.isRequired,\n//   };\n// function Row(props) {\n//     const { row, setId, editUser, setItens } = props;\n//     const [open, setOpen] = React.useState(false);\n//     function Editar(id) {\n//       setId(id);\n//       editUser();\n//     }\n//     const DelUser = (e) => {\n//       setItens(e)\n//       document.getElementById('avisaDel').showModal();\n//       document.getElementById('confirmaDel').innerHTML = (`Confirme para deletar ${e.nome}`)\n//   }\n//     return (\n//       <React.Fragment>\n//         <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n//           <TableCell component=\"th\" scope=\"row\">\n//               <div className={style.botoes}>\n//                   <button title=\"Editar\" onClick={() => Editar(row)}>\n//                       <EditIcon fontSize=\"small\" color='success' />\n//                   </button>\n//                   <button title=\"Apagar\">\n//                       <DeleteIcon onClick={() => DelUser(row)} fontSize=\"small\" color=\"error\" />\n//                   </button>\n//               </div>\n//           </TableCell>\n//           <TableCell>{row.nome}</TableCell>\n//           <TableCell align=\"right\">{row.rg}</TableCell>\n//           <TableCell align=\"right\">{row.cpf}</TableCell>\n//           <TableCell align=\"right\">{row.tel}</TableCell>\n//           <TableCell align=\"right\">{row.email}</TableCell>\n//           <TableCell>\n//             <IconButton\n//               aria-label=\"expand row\"\n//               size=\"small\"\n//               onClick={() => setOpen(!open)}\n//             >\n//               {open ? <KeyboardArrowUpIcon color='primary'/> : <KeyboardArrowDownIcon color='primary'/>}\n//             </IconButton>\n//           </TableCell>\n//         </TableRow>\n//         <TableRow>\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//               <Box sx={{ margin: 1 }}>\n//                 <Typography color='primary' variant=\"h6\" gutterBottom component=\"div\">\n//                   Detalhes <p></p>\n//                   <Button sx={{left: '82%'}} color='success' onClick={() => Editar(row)}>Editar</Button>\n//                   <Button sx={{left: '82%'}} color='error' onClick={() => DelUser(row)}>Apagar</Button>\n//                 </Typography>\n//                 <Table size=\"small\" aria-label=\"purchases\">\n//                   <TableHead>\n//                     <TableRow>\n//                       <TableCell>Cep</TableCell>\n//                       <TableCell>Rua</TableCell>\n//                       <TableCell align=\"right\">Numero</TableCell>\n//                       <TableCell align=\"right\">Complemento</TableCell>\n//                       <TableCell align=\"right\">Bairro</TableCell>\n//                       <TableCell align=\"right\">Cidade</TableCell>\n//                       <TableCell align=\"right\">UF</TableCell>\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody >\n//                       <TableRow>\n//                         <TableCell component=\"th\" scope=\"row\">{row.cep}</TableCell>\n//                         <TableCell>{row.logradouro}</TableCell>\n//                         <TableCell align=\"center\">{row.numero}</TableCell>\n//                         <TableCell align=\"right\">{row.complemento}</TableCell>\n//                         <TableCell align=\"right\">{row.bairro}</TableCell>\n//                         <TableCell align=\"right\">{row.cidade}</TableCell>\n//                         <TableCell align=\"right\">{row.uf}</TableCell>\n//                       </TableRow>\n//                   </TableBody>\n//                 </Table>\n//               </Box>\n//             </Collapse>\n//           </TableCell>\n//         </TableRow>\n//       </React.Fragment>\n//     );\n//   }   \n//   function descendingComparator(a, b, orderBy) {\n//     if (b[orderBy] < a[orderBy]) {\n//       return -1;\n//     }\n//     if (b[orderBy] > a[orderBy]) {\n//       return 1;\n//     }\n//     return 0;\n//   }\n//   function getComparator(order, orderBy) {\n//     return order === 'desc'\n//       ? (a, b) => descendingComparator(a, b, orderBy)\n//       : (a, b) => -descendingComparator(a, b, orderBy);\n//   }\n//   function stableSort(array, comparator) {\n//     const stabilizedThis = array.map((el, index) => [el, index]);\n//     stabilizedThis.sort((a, b) => {\n//       const order = comparator(a[0], b[0]);\n//       if (order !== 0) {\n//         return order;\n//       }\n//       return a[1] - b[1];\n//     });\n//     return stabilizedThis.map((el) => el[0]);\n//   }\n//   const cabecalho = [\n//     { \n//         id: 'nome',\n//         numeric: false,\n//         disablePadding: true,\n//         label: 'Nome'\n//     },\n//     {\n//         id: 'rg',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"RG\",\n//     },\n//     {\n//         id: 'cpf',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"CPF\"\n//     },\n//     {\n//         id: 'tel',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"Telefone\"\n//     },\n//     {\n//         id: 'email',\n//         numeri: false,\n//         disablePadding: false,\n//         label: \"Email\"\n//     }\n//   ]\n// export function ListarUsuario({viewUser, setId, editUser, onSelectAllClick, numSelected, rowCount, onRequestSort } ) {\n//     const createSortHandler = (property) => (event) => {\n//         onRequestSort(event, property);\n//       };\n//   const [usuario, setUsuario] = React.useState(\"\");\n//   const [itens, setItens] = React.useState(\"\")\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('nome');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const isSelected = (nome) => selected.indexOf(nome) !== -1;\n//   React.useEffect(() => {\n//     axios.get('http://localhost:3001/Usuarios/Listar')\n//     .then(res => {\n//         setUsuario(res.data)\n//     })\n//     .catch(err => console.log(err))\n//   }, []);\n//   function DeleteUser() {\n//     let { _id } = itens\n//     axios.post('http://localhost:3001/Usuario/Deletar', { _id })\n//     .then(res => {\n//         if (res.data.deletedCount === 0) { return; }\n//         else {\n//             axios.get('http://localhost:3001/Usuarios/Listar')\n//             .then(res => setUsuario(res.data))\n//             .catch(err => console.log(err))\n//     }})\n//     .catch(err => console.log(err))\n//   }\n//   if (usuario) {\n//     return (<>\n//         <dialog id='avisaDel' className={style.DialogoDeletar} onClick={() => document.getElementById(\"avisaDel\").close()}>\n//             <div>\n//                 <p id='confirmaDel'>teste</p>\n//                 <Button onClick={DeleteUser} variant='outlined' >Confirmar</Button>\n//                 <Button onClick={() => document.getElementById(\"avisaDel\").close()} variant='outlined' >Cancelar</Button>\n//             </div>\n//         </dialog>\n//       <TableContainer component={Paper}>\n//         <Table aria-label=\"collapsible table\" size='small'>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell/>\n//               {cabecalho.map((cabecalho) => (\n//                 <TableCell\n//                     key={cabecalho.id}\n//                     padding={cabecalho.disablePadding ? 'nome':'normal'}\n//                     sortDirection={orderBy === cabecalho.id ? order : false}\n//                 >\n//                     <TableSortLabel\n//                         active={orderBy === cabecalho.id}\n//                         direction={orderBy === cabecalho.id ? order : 'asc'}\n//                         onClick={createSortHandler(cabecalho.id)}\n//                     >\n//                         {cabecalho.label}\n//                         {orderBy === cabecalho.id ? (\n//                             <Box component='span' sx={visuallyHidden}>\n//                                 {order === 'desc' ? 'sorted descending' : 'sordet ascending'}\n//                             </Box>\n//                         ) : null}\n//                     </TableSortLabel>\n//                 </TableCell>\n//               ))}\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {stableSort(usuario, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((usuario, index) => {\n//                     const isItemSelected = isSelected(usuario.nome);\n//                     const labelId = `enhanced-table-checkbox-${index}`;\n//                 })\n//             }\n//             {/* {usuario.map((row) => (\n//               <Row key={row._id} row={row} DeleteUser={DeleteUser} setItens={setItens} setId={setId} viewUser={viewUser} editUser={editUser}/>\n//             ))} */}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </>);\n//   } else {\n//     return null\n//   }\n// }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nfunction EnhancedTableToolbar(props) {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nexport default function EnhancedTable() {\n  _s();\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = rows.map(n => n.name);\n      setSelected(newSelected);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.name),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.calories\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.fat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.carbs\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.protein\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 18\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 537,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EnhancedTable, \"+le4DheOZS8udNmeF7/fQ0Da0+k=\");\n\n_c3 = EnhancedTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"EnhancedTable\");","map":{"version":3,"names":["React","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","visuallyHidden","createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","numeric","disablePadding","id","label","propTypes","number","isRequired","func","oneOf","string","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","EnhancedTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelected","n","handleClick","selectedIndex","indexOf","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","max","width","mb","minWidth","row","isItemSelected","labelId","height"],"sources":["C:/Users/tdisu/Documents/REACT/CRDDRS/my-app/src/pages/Dashboard/Usuario/Listar/ListarUsuario.jsx"],"sourcesContent":["// import * as React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import Box from '@mui/material/Box';\r\n// import Collapse from '@mui/material/Collapse';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Table from '@mui/material/Table';\r\n// import TableBody from '@mui/material/TableBody';\r\n// import TableCell from '@mui/material/TableCell';\r\n// import TableContainer from '@mui/material/TableContainer';\r\n// import TableHead from '@mui/material/TableHead';\r\n// import TableRow from '@mui/material/TableRow';\r\n// import Typography from '@mui/material/Typography';\r\n// import Paper from '@mui/material/Paper';\r\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n// import axios from 'axios';\r\n// import { Button, TableSortLabel } from '@mui/material';\r\n// import style from './ListarUsuario.module.scss'\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n// import { visuallyHidden } from '@mui/utils';\r\n\r\n\r\n// ListarUsuario.propTypes = {\r\n//     numSelected: PropTypes.number.isRequired,\r\n//     onRequestSort: PropTypes.func.isRequired,\r\n//     onSelectAllClick: PropTypes.func.isRequired,\r\n//     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//     orderBy: PropTypes.string.isRequired,\r\n//     rowCount: PropTypes.number.isRequired,\r\n//   };\r\n\r\n\r\n// function Row(props) {\r\n//     const { row, setId, editUser, setItens } = props;\r\n//     const [open, setOpen] = React.useState(false);\r\n\r\n//     function Editar(id) {\r\n//       setId(id);\r\n//       editUser();\r\n//     }\r\n  \r\n//     const DelUser = (e) => {\r\n//       setItens(e)\r\n//       document.getElementById('avisaDel').showModal();\r\n//       document.getElementById('confirmaDel').innerHTML = (`Confirme para deletar ${e.nome}`)\r\n//   }\r\n  \r\n//     return (\r\n//       <React.Fragment>\r\n//         <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n//           <TableCell component=\"th\" scope=\"row\">\r\n//               <div className={style.botoes}>\r\n//                   <button title=\"Editar\" onClick={() => Editar(row)}>\r\n//                       <EditIcon fontSize=\"small\" color='success' />\r\n//                   </button>\r\n//                   <button title=\"Apagar\">\r\n//                       <DeleteIcon onClick={() => DelUser(row)} fontSize=\"small\" color=\"error\" />\r\n//                   </button>\r\n//               </div>\r\n//           </TableCell>\r\n//           <TableCell>{row.nome}</TableCell>\r\n//           <TableCell align=\"right\">{row.rg}</TableCell>\r\n//           <TableCell align=\"right\">{row.cpf}</TableCell>\r\n//           <TableCell align=\"right\">{row.tel}</TableCell>\r\n//           <TableCell align=\"right\">{row.email}</TableCell>\r\n//           <TableCell>\r\n//             <IconButton\r\n//               aria-label=\"expand row\"\r\n//               size=\"small\"\r\n//               onClick={() => setOpen(!open)}\r\n//             >\r\n//               {open ? <KeyboardArrowUpIcon color='primary'/> : <KeyboardArrowDownIcon color='primary'/>}\r\n//             </IconButton>\r\n//           </TableCell>\r\n//         </TableRow>\r\n//         <TableRow>\r\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n//               <Box sx={{ margin: 1 }}>\r\n//                 <Typography color='primary' variant=\"h6\" gutterBottom component=\"div\">\r\n//                   Detalhes <p></p>\r\n//                   <Button sx={{left: '82%'}} color='success' onClick={() => Editar(row)}>Editar</Button>\r\n//                   <Button sx={{left: '82%'}} color='error' onClick={() => DelUser(row)}>Apagar</Button>\r\n//                 </Typography>\r\n//                 <Table size=\"small\" aria-label=\"purchases\">\r\n//                   <TableHead>\r\n//                     <TableRow>\r\n//                       <TableCell>Cep</TableCell>\r\n//                       <TableCell>Rua</TableCell>\r\n//                       <TableCell align=\"right\">Numero</TableCell>\r\n//                       <TableCell align=\"right\">Complemento</TableCell>\r\n//                       <TableCell align=\"right\">Bairro</TableCell>\r\n//                       <TableCell align=\"right\">Cidade</TableCell>\r\n//                       <TableCell align=\"right\">UF</TableCell>\r\n//                     </TableRow>\r\n//                   </TableHead>\r\n//                   <TableBody >\r\n//                       <TableRow>\r\n//                         <TableCell component=\"th\" scope=\"row\">{row.cep}</TableCell>\r\n//                         <TableCell>{row.logradouro}</TableCell>\r\n//                         <TableCell align=\"center\">{row.numero}</TableCell>\r\n//                         <TableCell align=\"right\">{row.complemento}</TableCell>\r\n//                         <TableCell align=\"right\">{row.bairro}</TableCell>\r\n//                         <TableCell align=\"right\">{row.cidade}</TableCell>\r\n//                         <TableCell align=\"right\">{row.uf}</TableCell>\r\n//                       </TableRow>\r\n//                   </TableBody>\r\n//                 </Table>\r\n//               </Box>\r\n//             </Collapse>\r\n//           </TableCell>\r\n//         </TableRow>\r\n//       </React.Fragment>\r\n//     );\r\n//   }   \r\n\r\n//   function descendingComparator(a, b, orderBy) {\r\n//     if (b[orderBy] < a[orderBy]) {\r\n//       return -1;\r\n//     }\r\n//     if (b[orderBy] > a[orderBy]) {\r\n//       return 1;\r\n//     }\r\n//     return 0;\r\n//   }\r\n  \r\n//   function getComparator(order, orderBy) {\r\n//     return order === 'desc'\r\n//       ? (a, b) => descendingComparator(a, b, orderBy)\r\n//       : (a, b) => -descendingComparator(a, b, orderBy);\r\n//   }\r\n  \r\n//   function stableSort(array, comparator) {\r\n//     const stabilizedThis = array.map((el, index) => [el, index]);\r\n//     stabilizedThis.sort((a, b) => {\r\n//       const order = comparator(a[0], b[0]);\r\n//       if (order !== 0) {\r\n//         return order;\r\n//       }\r\n//       return a[1] - b[1];\r\n//     });\r\n//     return stabilizedThis.map((el) => el[0]);\r\n//   }\r\n\r\n//   const cabecalho = [\r\n//     { \r\n//         id: 'nome',\r\n//         numeric: false,\r\n//         disablePadding: true,\r\n//         label: 'Nome'\r\n//     },\r\n//     {\r\n//         id: 'rg',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"RG\",\r\n//     },\r\n//     {\r\n//         id: 'cpf',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"CPF\"\r\n//     },\r\n//     {\r\n//         id: 'tel',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"Telefone\"\r\n//     },\r\n//     {\r\n//         id: 'email',\r\n//         numeri: false,\r\n//         disablePadding: false,\r\n//         label: \"Email\"\r\n//     }\r\n//   ]\r\n\r\n// export function ListarUsuario({viewUser, setId, editUser, onSelectAllClick, numSelected, rowCount, onRequestSort } ) {\r\n\r\n//     const createSortHandler = (property) => (event) => {\r\n//         onRequestSort(event, property);\r\n//       };\r\n\r\n//   const [usuario, setUsuario] = React.useState(\"\");\r\n//   const [itens, setItens] = React.useState(\"\")\r\n//   const [order, setOrder] = React.useState('asc');\r\n//   const [orderBy, setOrderBy] = React.useState('nome');\r\n//   const [selected, setSelected] = React.useState([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n//   const isSelected = (nome) => selected.indexOf(nome) !== -1;\r\n\r\n//   React.useEffect(() => {\r\n//     axios.get('http://localhost:3001/Usuarios/Listar')\r\n//     .then(res => {\r\n//         setUsuario(res.data)\r\n//     })\r\n//     .catch(err => console.log(err))\r\n//   }, []);\r\n  \r\n//   function DeleteUser() {\r\n//     let { _id } = itens\r\n//     axios.post('http://localhost:3001/Usuario/Deletar', { _id })\r\n//     .then(res => {\r\n//         if (res.data.deletedCount === 0) { return; }\r\n//         else {\r\n//             axios.get('http://localhost:3001/Usuarios/Listar')\r\n//             .then(res => setUsuario(res.data))\r\n//             .catch(err => console.log(err))\r\n//     }})\r\n//     .catch(err => console.log(err))\r\n//   }\r\n\r\n  \r\n  \r\n//   if (usuario) {\r\n//     return (<>\r\n//         <dialog id='avisaDel' className={style.DialogoDeletar} onClick={() => document.getElementById(\"avisaDel\").close()}>\r\n//             <div>\r\n//                 <p id='confirmaDel'>teste</p>\r\n//                 <Button onClick={DeleteUser} variant='outlined' >Confirmar</Button>\r\n//                 <Button onClick={() => document.getElementById(\"avisaDel\").close()} variant='outlined' >Cancelar</Button>\r\n//             </div>\r\n//         </dialog>\r\n//       <TableContainer component={Paper}>\r\n//         <Table aria-label=\"collapsible table\" size='small'>\r\n//           <TableHead>\r\n//             <TableRow>\r\n//               <TableCell/>\r\n//               {cabecalho.map((cabecalho) => (\r\n//                 <TableCell\r\n//                     key={cabecalho.id}\r\n//                     padding={cabecalho.disablePadding ? 'nome':'normal'}\r\n//                     sortDirection={orderBy === cabecalho.id ? order : false}\r\n//                 >\r\n//                     <TableSortLabel\r\n//                         active={orderBy === cabecalho.id}\r\n//                         direction={orderBy === cabecalho.id ? order : 'asc'}\r\n//                         onClick={createSortHandler(cabecalho.id)}\r\n//                     >\r\n//                         {cabecalho.label}\r\n//                         {orderBy === cabecalho.id ? (\r\n//                             <Box component='span' sx={visuallyHidden}>\r\n//                                 {order === 'desc' ? 'sorted descending' : 'sordet ascending'}\r\n//                             </Box>\r\n//                         ) : null}\r\n\r\n//                     </TableSortLabel>\r\n//                 </TableCell>\r\n//               ))}\r\n//               <TableCell />\r\n//             </TableRow>\r\n//           </TableHead>\r\n//           <TableBody>\r\n//             {stableSort(usuario, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((usuario, index) => {\r\n//                     const isItemSelected = isSelected(usuario.nome);\r\n//                     const labelId = `enhanced-table-checkbox-${index}`;\r\n//                 })\r\n//             }\r\n//             {/* {usuario.map((row) => (\r\n//               <Row key={row._id} row={row} DeleteUser={DeleteUser} setItens={setItens} setId={setId} viewUser={viewUser} editUser={editUser}/>\r\n//             ))} */}\r\n//           </TableBody>\r\n//         </Table>\r\n//       </TableContainer>\r\n//     </>);\r\n//   } else {\r\n//     return null\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n  };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable() {\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n) => n.name);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper sx={{ width: '100%', mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.sort(getComparator(order, orderBy)).slice() */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            'aria-labelledby': labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </Box>\r\n  );\r\n}"],"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"},"metadata":{},"sourceType":"module"}