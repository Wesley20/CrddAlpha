{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tdisu\\\\Documents\\\\REACT\\\\CRDDRS\\\\my-app\\\\src\\\\pages\\\\Dashboard\\\\Usuario\\\\Listar\\\\ListarUsuario.jsx\",\n    _s = $RefreshSig$();\n\n// import * as React from 'react';\n// import PropTypes from 'prop-types';\n// import Box from '@mui/material/Box';\n// import Collapse from '@mui/material/Collapse';\n// import IconButton from '@mui/material/IconButton';\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Typography from '@mui/material/Typography';\n// import Paper from '@mui/material/Paper';\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n// import axios from 'axios';\n// import { Button, TableSortLabel } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import { visuallyHidden } from '@mui/utils';\n// ListarUsuario.propTypes = {\n//     numSelected: PropTypes.number.isRequired,\n//     onRequestSort: PropTypes.func.isRequired,\n//     onSelectAllClick: PropTypes.func.isRequired,\n//     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//     orderBy: PropTypes.string.isRequired,\n//     rowCount: PropTypes.number.isRequired,\n//   };\n// function Row(props) {\n//     const { row, setId, editUser, setItens } = props;\n//     const [open, setOpen] = React.useState(false);\n//     function Editar(id) {\n//       setId(id);\n//       editUser();\n//     }\n//     const DelUser = (e) => {\n//       setItens(e)\n//       document.getElementById('avisaDel').showModal();\n//       document.getElementById('confirmaDel').innerHTML = (`Confirme para deletar ${e.nome}`)\n//   }\n//     return (\n//       <React.Fragment>\n//         <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n//           <TableCell component=\"th\" scope=\"row\">\n//               <div className={style.botoes}>\n//                   <button title=\"Editar\" onClick={() => Editar(row)}>\n//                       <EditIcon fontSize=\"small\" color='success' />\n//                   </button>\n//                   <button title=\"Apagar\">\n//                       <DeleteIcon onClick={() => DelUser(row)} fontSize=\"small\" color=\"error\" />\n//                   </button>\n//               </div>\n//           </TableCell>\n//           <TableCell>{row.nome}</TableCell>\n//           <TableCell align=\"right\">{row.rg}</TableCell>\n//           <TableCell align=\"right\">{row.cpf}</TableCell>\n//           <TableCell align=\"right\">{row.tel}</TableCell>\n//           <TableCell align=\"right\">{row.email}</TableCell>\n//           <TableCell>\n//             <IconButton\n//               aria-label=\"expand row\"\n//               size=\"small\"\n//               onClick={() => setOpen(!open)}\n//             >\n//               {open ? <KeyboardArrowUpIcon color='primary'/> : <KeyboardArrowDownIcon color='primary'/>}\n//             </IconButton>\n//           </TableCell>\n//         </TableRow>\n//         <TableRow>\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//               <Box sx={{ margin: 1 }}>\n//                 <Typography color='primary' variant=\"h6\" gutterBottom component=\"div\">\n//                   Detalhes <p></p>\n//                   <Button sx={{left: '82%'}} color='success' onClick={() => Editar(row)}>Editar</Button>\n//                   <Button sx={{left: '82%'}} color='error' onClick={() => DelUser(row)}>Apagar</Button>\n//                 </Typography>\n//                 <Table size=\"small\" aria-label=\"purchases\">\n//                   <TableHead>\n//                     <TableRow>\n//                       <TableCell>Cep</TableCell>\n//                       <TableCell>Rua</TableCell>\n//                       <TableCell align=\"right\">Numero</TableCell>\n//                       <TableCell align=\"right\">Complemento</TableCell>\n//                       <TableCell align=\"right\">Bairro</TableCell>\n//                       <TableCell align=\"right\">Cidade</TableCell>\n//                       <TableCell align=\"right\">UF</TableCell>\n//                     </TableRow>\n//                   </TableHead>\n//                   <TableBody >\n//                       <TableRow>\n//                         <TableCell component=\"th\" scope=\"row\">{row.cep}</TableCell>\n//                         <TableCell>{row.logradouro}</TableCell>\n//                         <TableCell align=\"center\">{row.numero}</TableCell>\n//                         <TableCell align=\"right\">{row.complemento}</TableCell>\n//                         <TableCell align=\"right\">{row.bairro}</TableCell>\n//                         <TableCell align=\"right\">{row.cidade}</TableCell>\n//                         <TableCell align=\"right\">{row.uf}</TableCell>\n//                       </TableRow>\n//                   </TableBody>\n//                 </Table>\n//               </Box>\n//             </Collapse>\n//           </TableCell>\n//         </TableRow>\n//       </React.Fragment>\n//     );\n//   }   \n//   function descendingComparator(a, b, orderBy) {\n//     if (b[orderBy] < a[orderBy]) {\n//       return -1;\n//     }\n//     if (b[orderBy] > a[orderBy]) {\n//       return 1;\n//     }\n//     return 0;\n//   }\n//   function getComparator(order, orderBy) {\n//     return order === 'desc'\n//       ? (a, b) => descendingComparator(a, b, orderBy)\n//       : (a, b) => -descendingComparator(a, b, orderBy);\n//   }\n//   function stableSort(array, comparator) {\n//     const stabilizedThis = array.map((el, index) => [el, index]);\n//     stabilizedThis.sort((a, b) => {\n//       const order = comparator(a[0], b[0]);\n//       if (order !== 0) {\n//         return order;\n//       }\n//       return a[1] - b[1];\n//     });\n//     return stabilizedThis.map((el) => el[0]);\n//   }\n//   const cabecalho = [\n//     { \n//         id: 'nome',\n//         numeric: false,\n//         disablePadding: true,\n//         label: 'Nome'\n//     },\n//     {\n//         id: 'rg',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"RG\",\n//     },\n//     {\n//         id: 'cpf',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"CPF\"\n//     },\n//     {\n//         id: 'tel',\n//         numeric: false,\n//         disablePadding: false,\n//         label: \"Telefone\"\n//     },\n//     {\n//         id: 'email',\n//         numeri: false,\n//         disablePadding: false,\n//         label: \"Email\"\n//     }\n//   ]\n// export function ListarUsuario({viewUser, setId, editUser, onSelectAllClick, numSelected, rowCount, onRequestSort } ) {\n//     const createSortHandler = (property) => (event) => {\n//         onRequestSort(event, property);\n//       };\n//   const [usuario, setUsuario] = React.useState(\"\");\n//   const [itens, setItens] = React.useState(\"\")\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('nome');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [dense, setDense] = React.useState(false);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const isSelected = (nome) => selected.indexOf(nome) !== -1;\n//   React.useEffect(() => {\n//     axios.get('http://localhost:3001/Usuarios/Listar')\n//     .then(res => {\n//         setUsuario(res.data)\n//     })\n//     .catch(err => console.log(err))\n//   }, []);\n//   function DeleteUser() {\n//     let { _id } = itens\n//     axios.post('http://localhost:3001/Usuario/Deletar', { _id })\n//     .then(res => {\n//         if (res.data.deletedCount === 0) { return; }\n//         else {\n//             axios.get('http://localhost:3001/Usuarios/Listar')\n//             .then(res => setUsuario(res.data))\n//             .catch(err => console.log(err))\n//     }})\n//     .catch(err => console.log(err))\n//   }\n//   if (usuario) {\n//     return (<>\n//         <dialog id='avisaDel' className={style.DialogoDeletar} onClick={() => document.getElementById(\"avisaDel\").close()}>\n//             <div>\n//                 <p id='confirmaDel'>teste</p>\n//                 <Button onClick={DeleteUser} variant='outlined' >Confirmar</Button>\n//                 <Button onClick={() => document.getElementById(\"avisaDel\").close()} variant='outlined' >Cancelar</Button>\n//             </div>\n//         </dialog>\n//       <TableContainer component={Paper}>\n//         <Table aria-label=\"collapsible table\" size='small'>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell/>\n//               {cabecalho.map((cabecalho) => (\n//                 <TableCell\n//                     key={cabecalho.id}\n//                     padding={cabecalho.disablePadding ? 'nome':'normal'}\n//                     sortDirection={orderBy === cabecalho.id ? order : false}\n//                 >\n//                     <TableSortLabel\n//                         active={orderBy === cabecalho.id}\n//                         direction={orderBy === cabecalho.id ? order : 'asc'}\n//                         onClick={createSortHandler(cabecalho.id)}\n//                     >\n//                         {cabecalho.label}\n//                         {orderBy === cabecalho.id ? (\n//                             <Box component='span' sx={visuallyHidden}>\n//                                 {order === 'desc' ? 'sorted descending' : 'sordet ascending'}\n//                             </Box>\n//                         ) : null}\n//                     </TableSortLabel>\n//                 </TableCell>\n//               ))}\n//               <TableCell />\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {stableSort(usuario, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((usuario, index) => {\n//                     const isItemSelected = isSelected(usuario.nome);\n//                     const labelId = `enhanced-table-checkbox-${index}`;\n//                 })\n//             }\n//             {/* {usuario.map((row) => (\n//               <Row key={row._id} row={row} DeleteUser={DeleteUser} setItens={setItens} setId={setId} viewUser={viewUser} editUser={editUser}/>\n//             ))} */}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n//     </>);\n//   } else {\n//     return null\n//   }\n// }\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport axios from 'axios';\nimport { Button } from '@mui/material';\nimport style from './ListarUsuario.module.scss'; // function createData(nome, rg, cpf, tel, email) {\n//   return {\n//     nome,\n//     rg,\n//     cpf,\n//     tel,\n//     email,\n//   };\n// }\n// const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [{\n  id: 'nome',\n  numeric: false,\n  disablePadding: true,\n  label: 'Nome'\n}, {\n  id: 'rg',\n  numeric: true,\n  disablePadding: false,\n  label: 'RG'\n}, {\n  id: 'cfp',\n  numeric: true,\n  disablePadding: false,\n  label: 'CPF'\n}, {\n  id: 'tel',\n  numeric: true,\n  disablePadding: false,\n  label: 'Telefone'\n}, {\n  id: 'email',\n  numeric: true,\n  disablePadding: false,\n  label: 'Email'\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nfunction EnhancedTableToolbar(props) {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 456,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nexport function ListarUsuario() {\n  _s();\n\n  const [rows, setRows] = React.useState();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  React.useEffect(() => {\n    axios.get('http://localhost:3001/Usuarios/Listar').then(res => {\n      setRows(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelected = rows.map(n => n.nome);\n      setSelected(newSelected);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, nome) => {\n    const selectedIndex = selected.indexOf(nome);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, nome);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = nome => selected.indexOf(nome) !== -1; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  function DeleteUser() {\n    let {\n      _id\n    } = rows;\n    axios.post('http://localhost:3001/Usuario/Deletar', {\n      _id\n    }).then(res => {\n      if (res.data.deletedCount === 0) {\n        return;\n      } else {\n        axios.get('http://localhost:3001/Usuarios/Listar').then(res => setRows(res.data)).catch(err => console.log(err));\n      }\n    }).catch(err => console.log(err));\n  }\n\n  if (rows) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"dialog\", {\n        id: \"avisaDel\",\n        className: style.DialogoDeletar,\n        onClick: () => document.getElementById(\"avisaDel\").close(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"confirmaDel\",\n            children: \"teste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: DeleteUser,\n            variant: \"outlined\",\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => document.getElementById(\"avisaDel\").close(),\n            variant: \"outlined\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: '100%',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 750\n            },\n            \"aria-labelledby\": \"tableTitle\",\n            size: dense ? 'small' : 'medium',\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              numSelected: selected.length,\n              order: order,\n              orderBy: orderBy,\n              onSelectAllClick: handleSelectAllClick,\n              onRequestSort: handleRequestSort,\n              rowCount: rows.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const isItemSelected = isSelected(row.nome);\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.nome),\n                  role: \"checkbox\",\n                  \"aria-checked\": isItemSelected,\n                  tabIndex: -1,\n                  selected: isItemSelected,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: isItemSelected,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 638,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: row.nome\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.rg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.cpf\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.tel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 27\n                  }, this)]\n                }, row.nome, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 25\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: (dense ? 33 : 53) * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50, 100, 1000],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: dense,\n          onChange: handleChangeDense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 22\n        }, this),\n        label: \"Dense padding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(ListarUsuario, \"gF//SxAhaN4nqFujAv6+2Cg7BAU=\");\n\n_c3 = ListarUsuario;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"ListarUsuario\");","map":{"version":3,"names":["React","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","visuallyHidden","axios","Button","style","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","propTypes","number","isRequired","func","oneOf","string","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","ListarUsuario","rows","setRows","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","useEffect","get","then","res","data","catch","err","console","log","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelected","n","nome","handleClick","selectedIndex","indexOf","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","max","DeleteUser","_id","post","deletedCount","width","DialogoDeletar","document","getElementById","close","mb","minWidth","row","isItemSelected","labelId","rg","cpf","tel","email","height"],"sources":["C:/Users/tdisu/Documents/REACT/CRDDRS/my-app/src/pages/Dashboard/Usuario/Listar/ListarUsuario.jsx"],"sourcesContent":["// import * as React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import Box from '@mui/material/Box';\r\n// import Collapse from '@mui/material/Collapse';\r\n// import IconButton from '@mui/material/IconButton';\r\n// import Table from '@mui/material/Table';\r\n// import TableBody from '@mui/material/TableBody';\r\n// import TableCell from '@mui/material/TableCell';\r\n// import TableContainer from '@mui/material/TableContainer';\r\n// import TableHead from '@mui/material/TableHead';\r\n// import TableRow from '@mui/material/TableRow';\r\n// import Typography from '@mui/material/Typography';\r\n// import Paper from '@mui/material/Paper';\r\n// import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n// import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n// import axios from 'axios';\r\n// import { Button, TableSortLabel } from '@mui/material';\r\n// import DeleteIcon from '@mui/icons-material/Delete';\r\n// import EditIcon from '@mui/icons-material/Edit';\r\n// import { visuallyHidden } from '@mui/utils';\r\n\r\n\r\n// ListarUsuario.propTypes = {\r\n//     numSelected: PropTypes.number.isRequired,\r\n//     onRequestSort: PropTypes.func.isRequired,\r\n//     onSelectAllClick: PropTypes.func.isRequired,\r\n//     order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//     orderBy: PropTypes.string.isRequired,\r\n//     rowCount: PropTypes.number.isRequired,\r\n//   };\r\n\r\n\r\n// function Row(props) {\r\n//     const { row, setId, editUser, setItens } = props;\r\n//     const [open, setOpen] = React.useState(false);\r\n\r\n//     function Editar(id) {\r\n//       setId(id);\r\n//       editUser();\r\n//     }\r\n  \r\n//     const DelUser = (e) => {\r\n//       setItens(e)\r\n//       document.getElementById('avisaDel').showModal();\r\n//       document.getElementById('confirmaDel').innerHTML = (`Confirme para deletar ${e.nome}`)\r\n//   }\r\n  \r\n//     return (\r\n//       <React.Fragment>\r\n//         <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n//           <TableCell component=\"th\" scope=\"row\">\r\n//               <div className={style.botoes}>\r\n//                   <button title=\"Editar\" onClick={() => Editar(row)}>\r\n//                       <EditIcon fontSize=\"small\" color='success' />\r\n//                   </button>\r\n//                   <button title=\"Apagar\">\r\n//                       <DeleteIcon onClick={() => DelUser(row)} fontSize=\"small\" color=\"error\" />\r\n//                   </button>\r\n//               </div>\r\n//           </TableCell>\r\n//           <TableCell>{row.nome}</TableCell>\r\n//           <TableCell align=\"right\">{row.rg}</TableCell>\r\n//           <TableCell align=\"right\">{row.cpf}</TableCell>\r\n//           <TableCell align=\"right\">{row.tel}</TableCell>\r\n//           <TableCell align=\"right\">{row.email}</TableCell>\r\n//           <TableCell>\r\n//             <IconButton\r\n//               aria-label=\"expand row\"\r\n//               size=\"small\"\r\n//               onClick={() => setOpen(!open)}\r\n//             >\r\n//               {open ? <KeyboardArrowUpIcon color='primary'/> : <KeyboardArrowDownIcon color='primary'/>}\r\n//             </IconButton>\r\n//           </TableCell>\r\n//         </TableRow>\r\n//         <TableRow>\r\n//           <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n//             <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n//               <Box sx={{ margin: 1 }}>\r\n//                 <Typography color='primary' variant=\"h6\" gutterBottom component=\"div\">\r\n//                   Detalhes <p></p>\r\n//                   <Button sx={{left: '82%'}} color='success' onClick={() => Editar(row)}>Editar</Button>\r\n//                   <Button sx={{left: '82%'}} color='error' onClick={() => DelUser(row)}>Apagar</Button>\r\n//                 </Typography>\r\n//                 <Table size=\"small\" aria-label=\"purchases\">\r\n//                   <TableHead>\r\n//                     <TableRow>\r\n//                       <TableCell>Cep</TableCell>\r\n//                       <TableCell>Rua</TableCell>\r\n//                       <TableCell align=\"right\">Numero</TableCell>\r\n//                       <TableCell align=\"right\">Complemento</TableCell>\r\n//                       <TableCell align=\"right\">Bairro</TableCell>\r\n//                       <TableCell align=\"right\">Cidade</TableCell>\r\n//                       <TableCell align=\"right\">UF</TableCell>\r\n//                     </TableRow>\r\n//                   </TableHead>\r\n//                   <TableBody >\r\n//                       <TableRow>\r\n//                         <TableCell component=\"th\" scope=\"row\">{row.cep}</TableCell>\r\n//                         <TableCell>{row.logradouro}</TableCell>\r\n//                         <TableCell align=\"center\">{row.numero}</TableCell>\r\n//                         <TableCell align=\"right\">{row.complemento}</TableCell>\r\n//                         <TableCell align=\"right\">{row.bairro}</TableCell>\r\n//                         <TableCell align=\"right\">{row.cidade}</TableCell>\r\n//                         <TableCell align=\"right\">{row.uf}</TableCell>\r\n//                       </TableRow>\r\n//                   </TableBody>\r\n//                 </Table>\r\n//               </Box>\r\n//             </Collapse>\r\n//           </TableCell>\r\n//         </TableRow>\r\n//       </React.Fragment>\r\n//     );\r\n//   }   \r\n\r\n//   function descendingComparator(a, b, orderBy) {\r\n//     if (b[orderBy] < a[orderBy]) {\r\n//       return -1;\r\n//     }\r\n//     if (b[orderBy] > a[orderBy]) {\r\n//       return 1;\r\n//     }\r\n//     return 0;\r\n//   }\r\n  \r\n//   function getComparator(order, orderBy) {\r\n//     return order === 'desc'\r\n//       ? (a, b) => descendingComparator(a, b, orderBy)\r\n//       : (a, b) => -descendingComparator(a, b, orderBy);\r\n//   }\r\n  \r\n//   function stableSort(array, comparator) {\r\n//     const stabilizedThis = array.map((el, index) => [el, index]);\r\n//     stabilizedThis.sort((a, b) => {\r\n//       const order = comparator(a[0], b[0]);\r\n//       if (order !== 0) {\r\n//         return order;\r\n//       }\r\n//       return a[1] - b[1];\r\n//     });\r\n//     return stabilizedThis.map((el) => el[0]);\r\n//   }\r\n\r\n//   const cabecalho = [\r\n//     { \r\n//         id: 'nome',\r\n//         numeric: false,\r\n//         disablePadding: true,\r\n//         label: 'Nome'\r\n//     },\r\n//     {\r\n//         id: 'rg',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"RG\",\r\n//     },\r\n//     {\r\n//         id: 'cpf',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"CPF\"\r\n//     },\r\n//     {\r\n//         id: 'tel',\r\n//         numeric: false,\r\n//         disablePadding: false,\r\n//         label: \"Telefone\"\r\n//     },\r\n//     {\r\n//         id: 'email',\r\n//         numeri: false,\r\n//         disablePadding: false,\r\n//         label: \"Email\"\r\n//     }\r\n//   ]\r\n\r\n// export function ListarUsuario({viewUser, setId, editUser, onSelectAllClick, numSelected, rowCount, onRequestSort } ) {\r\n\r\n//     const createSortHandler = (property) => (event) => {\r\n//         onRequestSort(event, property);\r\n//       };\r\n\r\n//   const [usuario, setUsuario] = React.useState(\"\");\r\n//   const [itens, setItens] = React.useState(\"\")\r\n//   const [order, setOrder] = React.useState('asc');\r\n//   const [orderBy, setOrderBy] = React.useState('nome');\r\n//   const [selected, setSelected] = React.useState([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [dense, setDense] = React.useState(false);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n//   const isSelected = (nome) => selected.indexOf(nome) !== -1;\r\n\r\n//   React.useEffect(() => {\r\n//     axios.get('http://localhost:3001/Usuarios/Listar')\r\n//     .then(res => {\r\n//         setUsuario(res.data)\r\n//     })\r\n//     .catch(err => console.log(err))\r\n//   }, []);\r\n  \r\n//   function DeleteUser() {\r\n//     let { _id } = itens\r\n//     axios.post('http://localhost:3001/Usuario/Deletar', { _id })\r\n//     .then(res => {\r\n//         if (res.data.deletedCount === 0) { return; }\r\n//         else {\r\n//             axios.get('http://localhost:3001/Usuarios/Listar')\r\n//             .then(res => setUsuario(res.data))\r\n//             .catch(err => console.log(err))\r\n//     }})\r\n//     .catch(err => console.log(err))\r\n//   }\r\n\r\n  \r\n  \r\n//   if (usuario) {\r\n//     return (<>\r\n//         <dialog id='avisaDel' className={style.DialogoDeletar} onClick={() => document.getElementById(\"avisaDel\").close()}>\r\n//             <div>\r\n//                 <p id='confirmaDel'>teste</p>\r\n//                 <Button onClick={DeleteUser} variant='outlined' >Confirmar</Button>\r\n//                 <Button onClick={() => document.getElementById(\"avisaDel\").close()} variant='outlined' >Cancelar</Button>\r\n//             </div>\r\n//         </dialog>\r\n//       <TableContainer component={Paper}>\r\n//         <Table aria-label=\"collapsible table\" size='small'>\r\n//           <TableHead>\r\n//             <TableRow>\r\n//               <TableCell/>\r\n//               {cabecalho.map((cabecalho) => (\r\n//                 <TableCell\r\n//                     key={cabecalho.id}\r\n//                     padding={cabecalho.disablePadding ? 'nome':'normal'}\r\n//                     sortDirection={orderBy === cabecalho.id ? order : false}\r\n//                 >\r\n//                     <TableSortLabel\r\n//                         active={orderBy === cabecalho.id}\r\n//                         direction={orderBy === cabecalho.id ? order : 'asc'}\r\n//                         onClick={createSortHandler(cabecalho.id)}\r\n//                     >\r\n//                         {cabecalho.label}\r\n//                         {orderBy === cabecalho.id ? (\r\n//                             <Box component='span' sx={visuallyHidden}>\r\n//                                 {order === 'desc' ? 'sorted descending' : 'sordet ascending'}\r\n//                             </Box>\r\n//                         ) : null}\r\n\r\n//                     </TableSortLabel>\r\n//                 </TableCell>\r\n//               ))}\r\n//               <TableCell />\r\n//             </TableRow>\r\n//           </TableHead>\r\n//           <TableBody>\r\n//             {stableSort(usuario, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((usuario, index) => {\r\n//                     const isItemSelected = isSelected(usuario.nome);\r\n//                     const labelId = `enhanced-table-checkbox-${index}`;\r\n//                 })\r\n//             }\r\n//             {/* {usuario.map((row) => (\r\n//               <Row key={row._id} row={row} DeleteUser={DeleteUser} setItens={setItens} setId={setId} viewUser={viewUser} editUser={editUser}/>\r\n//             ))} */}\r\n//           </TableBody>\r\n//         </Table>\r\n//       </TableContainer>\r\n//     </>);\r\n//   } else {\r\n//     return null\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport axios from 'axios';\r\nimport { Button } from '@mui/material';\r\nimport style from './ListarUsuario.module.scss'\r\n\r\n// function createData(nome, rg, cpf, tel, email) {\r\n//   return {\r\n//     nome,\r\n//     rg,\r\n//     cpf,\r\n//     tel,\r\n//     email,\r\n//   };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n      id: 'nome',\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: 'Nome',\r\n    },\r\n    {\r\n      id: 'rg',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'RG',\r\n    },\r\n    {\r\n      id: 'cfp',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'CPF',\r\n    },\r\n    {\r\n      id: 'tel',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'Telefone',\r\n    },\r\n    {\r\n      id: 'email',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'Email',\r\n    },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n    props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              'aria-label': 'select all desserts',\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTableToolbar(props) {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nexport function ListarUsuario() {\r\n  const [rows, setRows] = React.useState()\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  React.useEffect(() => {\r\n    axios.get('http://localhost:3001/Usuarios/Listar')\r\n    .then(res => {\r\n        setRows(res.data)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelected = rows.map((n) => n.nome);\r\n      setSelected(newSelected);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, nome) => {\r\n    const selectedIndex = selected.indexOf(nome);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, nome);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (nome) => selected.indexOf(nome) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    function DeleteUser() {\r\n        let { _id } = rows\r\n        axios.post('http://localhost:3001/Usuario/Deletar', { _id })\r\n        .then(res => {\r\n            if (res.data.deletedCount === 0) { return; }\r\n            else {\r\n                axios.get('http://localhost:3001/Usuarios/Listar')\r\n                .then(res => setRows(res.data))\r\n                .catch(err => console.log(err))\r\n        }})\r\n        .catch(err => console.log(err))\r\n      }\r\n\r\n  if (rows){\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            \r\n        <dialog id='avisaDel' className={style.DialogoDeletar} onClick={() => document.getElementById(\"avisaDel\").close()}>\r\n            <div>\r\n                <p id='confirmaDel'>teste</p>\r\n                <Button onClick={DeleteUser} variant='outlined' >Confirmar</Button>\r\n                <Button onClick={() => document.getElementById(\"avisaDel\").close()} variant='outlined' >Cancelar</Button>\r\n            </div>\r\n        </dialog>\r\n          <Paper sx={{ width: '100%', mb: 2 }}>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n            <TableContainer>\r\n              <Table\r\n                sx={{ minWidth: 750 }}\r\n                aria-labelledby=\"tableTitle\"\r\n                size={dense ? 'small' : 'medium'}\r\n              >\r\n                <EnhancedTableHead\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={rows.length}\r\n                />\r\n                <TableBody>\r\n                  {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                     rows.sort(getComparator(order, orderBy)).slice() */}\r\n                  {stableSort(rows, getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      const isItemSelected = isSelected(row.nome);\r\n                      const labelId = `enhanced-table-checkbox-${index}`;\r\n    \r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={(event) => handleClick(event, row.nome)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          tabIndex={-1}\r\n                          key={row.nome}\r\n                          selected={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              color=\"primary\"\r\n                              checked={isItemSelected}\r\n                              inputProps={{\r\n                                'aria-labelledby': labelId,\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            id={labelId}\r\n                            scope=\"row\"\r\n                            padding=\"none\"\r\n                          >\r\n                            {row.nome}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.rg}</TableCell>\r\n                          <TableCell align=\"right\">{row.cpf}</TableCell>\r\n                          <TableCell align=\"right\">{row.tel}</TableCell>\r\n                          <TableCell align=\"right\">{row.email}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow\r\n                      style={{\r\n                        height: (dense ? 33 : 53) * emptyRows,\r\n                      }}\r\n                    >\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 50, 100, 1000]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n          <FormControlLabel\r\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n            label=\"Dense padding\"\r\n          />\r\n        </Box>\r\n      );\r\n  } else {\r\n    return <p>Loading...</p>\r\n  }\r\n}"],"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"},"metadata":{},"sourceType":"module"}