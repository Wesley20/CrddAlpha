{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tdisu\\\\Documents\\\\REACT\\\\CRDDRS\\\\my-app\\\\src\\\\pages\\\\Dashboard\\\\Grt\\\\ListarGrt\\\\Linha\\\\Linha.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, TableCell, TableRow, TextField, Tooltip, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport AddchartIcon from '@mui/icons-material/Addchart';\nimport { Box } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Linha = _ref => {\n  _s();\n  let {\n    row,\n    labelId,\n    user\n  } = _ref;\n  const [open, setOpen] = React.useState({\n    open: false,\n    tipo: \"\",\n    titulo: \"\",\n    frase: \"\",\n    texto1: \"\",\n    texto2: \"\"\n  });\n  const [open1, setOpen1] = React.useState(false);\n  const [response, setResponse] = React.useState();\n  const [grt, setGrt] = React.useState({\n    grt1: '',\n    grt2: ''\n  });\n  var geraGRT = [];\n  const [msg, setMsg] = React.useState({\n    msg: '',\n    status: \"primary\"\n  });\n  const [cancelar, setCancelar] = React.useState(\"\");\n  const handleClickOpen0 = () => {\n    // console.log(row)\n    setOpen(a => ({\n      ...a,\n      open: true,\n      tipo: \"1\",\n      titulo: \"Adicionar GRT\",\n      frase: `Para adicionar as GRTs ao despachante\\n` + ` selecionado, digite o primeiro e ultimo número dos GRTs.\\n` + ` e clique em Adicionar.`,\n      texto1: \"A geração das GRTs é realizada de acordo com a grt inicial, final e a quantidade de GRTs solicitasas, caso não seja preenchida corretamente não será possível adicionar as GRTs.\",\n      texto2: \"Ex: GRT inicial A000000, GRT final A000049 totalizando 50 GRTs.\"\n    }));\n  };\n  const handleClickOpen1 = () => {\n    console.log(row);\n    setOpen(a => ({\n      ...a,\n      open: true,\n      tipo: \"2\",\n      titulo: \"Excluir solicitação de GRT\",\n      frase: 'Para realizar o cancelamento da solicitação é necessário escrever o motivo do cancelamento.',\n      texto1: \"\",\n      texto2: \"\"\n    }));\n  };\n  const handleClose = () => {\n    setOpen(a => ({\n      ...a,\n      open: false,\n      tipo: '',\n      titulo: '',\n      frase: '',\n      texto1: '',\n      texto2: ''\n    }));\n  };\n  const handleClose1 = () => {\n    setOpen1(false);\n  };\n  const cancelarGrt = () => {\n    console.log(\"Cancelado\");\n  };\n  function addZero(num, len) {\n    var nwz = String(num);\n    var counter = nwz.length;\n    while (counter < len) {\n      nwz = \"0\" + nwz;\n      counter++;\n    }\n    return nwz;\n  }\n  const gerarGRT = () => {\n    let z = grt.grt1.slice(1);\n    let x = grt.grt2.slice(1);\n    // let valida1 = row.quantidade === x - z;\n    // if (grt.grt1 === '' || grt.grt2 === '') {\n    //     setMsg(a => ({ ...a, msg: \"Preencher os campos de GRT!\", status: \"error\" }))\n    // } else if (valida1 === false) {\n    //     setMsg(a => ({ ...a, msg: \"Numero da GRT não bate com a quantidade solicitada\", status: \"error\" }))\n    // } else {\n    //     console.log(\"Opa\")\n    //     axios.post('http://localhost:3001/GerarGRT', {\n    //         row,\n    //     })\n    //         .then(response => {\n    //             console.log(response)\n    //             setResponse(response.data)\n    //             setOpen(false)\n    //             setOpen1(true)\n    //             row.situacao = \"EM PROCESSO\"\n    //         })\n    //         .catch(error => {\n    //             console.log(error)\n    //         })\n    // }\n  };\n\n  const handleConfirm = () => {\n    console.log(\"clicado\");\n    row[\"11\"] = cancelar;\n    axios.post('http://localhost:3001/GRT/ExcluirSolicitacao', {\n      row\n    }).then(response => {\n      console.log(response);\n      setResponse(response.data);\n      setOpen(false);\n      setOpen1(true);\n      row.situacao = \"EM PROCESSO\";\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  React.useEffect(() => {\n    if (grt.grt1.length === 7) {\n      setEr1(a => ({\n        ...a,\n        erro: false,\n        texto: ''\n      }));\n      setEr2(a => ({\n        ...a,\n        erro: false,\n        texto: ''\n      }));\n      let z = (grt.grt1.slice(1) * 1 + (row.quantidade - 1)).toString().length;\n      for (let gama = 0; gama < row.quantidade; gama++) {\n        console.log(grt.grt1.slice(1) * 1 + gama);\n        if ((grt.grt1.slice(1) * 1 + gama).toString().length < 7) {\n          console.log('1', gama);\n        } else {\n          console.log('2', gama);\n        }\n      }\n      if (z > 6) {\n        let letra = grt.grt1.slice(0, 1);\n        var alfa;\n        switch (letra) {\n          case \"A\":\n            alfa = \"B\";\n            break;\n          case \"B\":\n            alfa = \"C\";\n            break;\n          case \"C\":\n            alfa = \"D\";\n            break;\n          case \"D\":\n            alfa = \"E\";\n            break;\n          case \"E\":\n            alfa = \"F\";\n            break;\n          case \"F\":\n            alfa = \"G\";\n            break;\n          case \"G\":\n            alfa = \"H\";\n            break;\n          case \"H\":\n            alfa = \"I\";\n            break;\n          case \"I\":\n            alfa = \"J\";\n            break;\n          case \"J\":\n            alfa = \"K\";\n            break;\n          case \"K\":\n            alfa = \"L\";\n            break;\n          case \"L\":\n            alfa = \"M\";\n            break;\n          case \"M\":\n            alfa = \"N\";\n            break;\n          case \"N\":\n            alfa = \"O\";\n            break;\n          case \"O\":\n            alfa = \"P\";\n            break;\n          case \"P\":\n            alfa = \"Q\";\n            break;\n          case \"Q\":\n            alfa = \"R\";\n            break;\n          case \"R\":\n            alfa = \"S\";\n            break;\n          case \"S\":\n            alfa = \"T\";\n            break;\n          case \"T\":\n            alfa = \"U\";\n            break;\n          case \"U\":\n            alfa = \"V\";\n            break;\n          case \"V\":\n            alfa = \"X\";\n            break;\n          case \"X\":\n            alfa = \"Z\";\n            break;\n          case \"Z\":\n            alfa = \"A\";\n            break;\n          default:\n        }\n        setGrt(a => ({\n          ...a,\n          grt2: `${alfa}${(grt.grt1.slice(1) * 1 + (row.quantidade - 1)).toString().slice(1)}`\n        }));\n      } else {\n        setGrt(a => ({\n          ...a,\n          grt2: `${grt.grt1[0]}${addZero(grt.grt1.slice(1) * 1 + (row.quantidade - 1), 6)}`\n        }));\n      }\n    }\n  }, [grt.grt1, grt.grt2, row.quantidade]);\n  const [er1, setEr1] = React.useState({\n    erro: false,\n    texto: ''\n  });\n  const [er2, setEr2] = React.useState({\n    erro: false,\n    texto: ''\n  });\n  const VerValor = () => {\n    if (grt.grt1.length !== 7) {\n      setEr1(a => ({\n        ...a,\n        erro: true,\n        texto: 'GRT precisa ter uma letra maiúscula e seis números'\n      }));\n    } else {\n      setEr1(a => ({\n        ...a,\n        erro: false,\n        texto: ''\n      }));\n    }\n    if (grt.grt2.length !== 7) {\n      setEr2(a => ({\n        ...a,\n        erro: true,\n        texto: 'GRT precisa ter uma letra maiúscula e seis números'\n      }));\n    } else {\n      setEr2(a => ({\n        ...a,\n        erro: false,\n        texto: ''\n      }));\n    }\n  };\n  var validabotao = grt.grt1.length === 7 ? grt.grt2.length === 7 ? er1.erro === false ? er2.erro === false ? false : true : true : true : true;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: open.open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"Validar\",\n      \"aria-describedby\": \"Validar-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"Validar\",\n        children: open.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"Validar-description\",\n          children: open.frase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Solicitante da GRT: \", row.nome]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Quantidade solicitada: \", row.quantidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), open.tipo === \"1\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            required: true,\n            margin: \"dense\",\n            label: \"GRT inicial\",\n            fullWidth: true,\n            variant: \"standard\",\n            error: er1.erro,\n            helperText: er1.texto,\n            value: grt.grt1,\n            onBlur: VerValor,\n            onChange: e => setGrt(a => ({\n              ...a,\n              grt1: e.target.value.toUpperCase().slice(0, 7)\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            margin: \"dense\",\n            label: \"GRT Final\",\n            fullWidth: true,\n            variant: \"standard\",\n            error: er2.erro,\n            helperText: er2.texto,\n            value: grt.grt2,\n            onBlur: VerValor,\n            onChange: e => setGrt(a => ({\n              ...a,\n              grt2: e.target.value.toUpperCase().slice(0, 7)\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), open.tipo === \"2\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            label: \"Motivo do cancelamento.\",\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            variant: \"standard\",\n            onChange: e => setCancelar(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(DialogContentText, {\n          sx: {\n            mt: 4\n          },\n          children: open.texto1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContentText, {\n          sx: {\n            mt: 2\n          },\n          children: open.texto2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: msg.status,\n        children: msg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [open.tipo === \"1\" ? /*#__PURE__*/_jsxDEV(Button, {\n          disabled: validabotao,\n          color: \"primary\",\n          onClick: () => gerarGRT(),\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 42\n        }, this) : null, open.tipo === \"2\" ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: () => handleConfirm(),\n          children: \"Confirmar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 42\n        }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n          color: \"error\",\n          onClick: handleClose,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open1,\n      onClose: handleClose1,\n      \"aria-labelledby\": \"Confirmar\",\n      \"aria-describedby\": \"Confirmar-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"Confirmar\",\n        children: row.quantidade > 1 ? \"GRT inserida com sucesso\" : \"GRTs inseridas com sucesso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"Confirmar-description\",\n          children: row.quantidade > 1 ? `Foi liberado ${row.quantidade} GRTs ao despachante ${row.nome}` : `Será liberado 1 GRT ao despachante ${row.nome} sendo ela a ${response && response.GRTletra}${response && response.GRTnumero}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          onClick: handleClose1,\n          children: \"Concluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        sx: {\n          '& > *': {\n            borderBottom: 'unset'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        id: labelId,\n        scope: \"row\",\n        padding: \"none\",\n        children: row.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.hora\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.quantidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.situacao\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: [row.situacao === \"SOLICITADO\" && user.usuariotipo === 'master' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Enviar GRT\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: {\n                p: '0 5px'\n              },\n              onClick: handleClickOpen0,\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(AddchartIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Cancelar GRT\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              sx: {\n                p: '0 5px'\n              },\n              onClick: handleClickOpen1,\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : null, row.situacao === \"SOLICITADO\" && user.usuariotipo === \"despachante\" ? /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Solicitar o cancelamento da solicita\\xE7\\xE3o\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: cancelarGrt,\n            color: \"error handleClickOpen\",\n            children: /*#__PURE__*/_jsxDEV(CancelIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        sx: {\n          '& > *': {\n            borderBottom: 'unset'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, row._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Linha, \"kY1AtdMJfKL76KzPB6A4DNXjPOc=\");\n_c = Linha;\nvar _c;\n$RefreshReg$(_c, \"Linha\");","map":{"version":3,"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","IconButton","TableCell","TableRow","TextField","Tooltip","Typography","axios","CancelIcon","AddchartIcon","Box","Linha","row","labelId","user","open","setOpen","useState","tipo","titulo","frase","texto1","texto2","open1","setOpen1","response","setResponse","grt","setGrt","grt1","grt2","geraGRT","msg","setMsg","status","cancelar","setCancelar","handleClickOpen0","a","handleClickOpen1","console","log","handleClose","handleClose1","cancelarGrt","addZero","num","len","nwz","String","counter","length","gerarGRT","z","slice","x","handleConfirm","post","then","data","situacao","catch","error","useEffect","setEr1","erro","texto","setEr2","quantidade","toString","gama","letra","alfa","er1","er2","VerValor","validabotao","p","nome","e","target","value","toUpperCase","mt","GRTletra","GRTnumero","borderBottom","hora","usuariotipo","_id"],"sources":["C:/Users/tdisu/Documents/REACT/CRDDRS/my-app/src/pages/Dashboard/Grt/ListarGrt/Linha/Linha.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, IconButton, TableCell, TableRow, TextField, Tooltip, Typography } from \"@mui/material\"\r\nimport axios from \"axios\";\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport AddchartIcon from '@mui/icons-material/Addchart';\r\nimport { Box } from \"@mui/system\";\r\n\r\nexport const Linha = ({ row, labelId, user }) => {\r\n\r\n    const [open, setOpen] = React.useState({\r\n        open: false,\r\n        tipo: \"\",\r\n        titulo: \"\",\r\n        frase: \"\",\r\n        texto1: \"\",\r\n        texto2: \"\"\r\n    });\r\n    const [open1, setOpen1] = React.useState(false);\r\n    const [response, setResponse] = React.useState();\r\n    const [grt, setGrt] = React.useState({\r\n        grt1: '',\r\n        grt2: ''\r\n    })\r\n    var geraGRT = [];\r\n    const [msg, setMsg] = React.useState({\r\n        msg: '',\r\n        status: \"primary\"\r\n    });\r\n    const [cancelar, setCancelar] = React.useState(\"\");\r\n\r\n    const handleClickOpen0 = () => {\r\n        // console.log(row)\r\n        setOpen(a => ({\r\n            ...a,\r\n            open: true,\r\n            tipo: \"1\",\r\n            titulo: \"Adicionar GRT\",\r\n            frase: `Para adicionar as GRTs ao despachante\\n` +\r\n                ` selecionado, digite o primeiro e ultimo número dos GRTs.\\n` +\r\n                ` e clique em Adicionar.`,\r\n            texto1: \"A geração das GRTs é realizada de acordo com a grt inicial, final e a quantidade de GRTs solicitasas, caso não seja preenchida corretamente não será possível adicionar as GRTs.\",\r\n            texto2: \"Ex: GRT inicial A000000, GRT final A000049 totalizando 50 GRTs.\",\r\n        }));\r\n    };\r\n    const handleClickOpen1 = () => {\r\n        console.log(row)\r\n        setOpen(a => ({\r\n            ...a,\r\n            open: true,\r\n            tipo: \"2\",\r\n            titulo: \"Excluir solicitação de GRT\",\r\n            frase: 'Para realizar o cancelamento da solicitação é necessário escrever o motivo do cancelamento.',\r\n            texto1: \"\",\r\n            texto2: \"\",\r\n        }));\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(a => ({\r\n            ...a,\r\n            open: false,\r\n            tipo: '',\r\n            titulo: '',\r\n            frase: '',\r\n            texto1: '',\r\n            texto2: ''\r\n        }));\r\n    };\r\n\r\n    const handleClose1 = () => {\r\n        setOpen1(false);\r\n    };\r\n\r\n    const cancelarGrt = () => {\r\n        console.log(\"Cancelado\")\r\n    };\r\n    \r\n    function addZero(num, len) {\r\n        var nwz = String(num);\r\n        var counter = nwz.length;\r\n        while(counter < len){\r\n            nwz = \"0\" + nwz;\r\n            counter++;\r\n        }\r\n        return nwz\r\n    }\r\n\r\n    const gerarGRT = () => {\r\n        let z = grt.grt1.slice(1);\r\n        let x = grt.grt2.slice(1);\r\n        // let valida1 = row.quantidade === x - z;\r\n        // if (grt.grt1 === '' || grt.grt2 === '') {\r\n        //     setMsg(a => ({ ...a, msg: \"Preencher os campos de GRT!\", status: \"error\" }))\r\n        // } else if (valida1 === false) {\r\n        //     setMsg(a => ({ ...a, msg: \"Numero da GRT não bate com a quantidade solicitada\", status: \"error\" }))\r\n        // } else {\r\n        //     console.log(\"Opa\")\r\n        //     axios.post('http://localhost:3001/GerarGRT', {\r\n        //         row,\r\n        //     })\r\n        //         .then(response => {\r\n        //             console.log(response)\r\n        //             setResponse(response.data)\r\n        //             setOpen(false)\r\n        //             setOpen1(true)\r\n        //             row.situacao = \"EM PROCESSO\"\r\n        //         })\r\n        //         .catch(error => {\r\n        //             console.log(error)\r\n        //         })\r\n        // }\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        console.log(\"clicado\")\r\n        row[\"11\"] = cancelar\r\n        axios.post('http://localhost:3001/GRT/ExcluirSolicitacao', {\r\n            row,\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                setResponse(response.data)\r\n                setOpen(false)\r\n                setOpen1(true)\r\n                row.situacao = \"EM PROCESSO\"\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (grt.grt1.length === 7) {\r\n            setEr1(a => ({\r\n                ...a,\r\n                erro: false,\r\n                texto: ''\r\n            }))\r\n            setEr2(a => ({\r\n                ...a,\r\n                erro: false,\r\n                texto: ''\r\n            }))\r\n            let z = ((grt.grt1.slice(1) * 1) + (row.quantidade - 1)).toString().length\r\n            for(let gama = 0; gama < row.quantidade; gama++){\r\n                console.log((grt.grt1.slice(1) * 1) + gama)\r\n                if(((grt.grt1.slice(1) * 1) + gama).toString().length < 7){\r\n                    console.log('1',gama)\r\n                } else {\r\n                    console.log('2',gama)\r\n                }\r\n            }\r\n            if (z > 6) {\r\n                let letra = grt.grt1.slice(0, 1)\r\n                var alfa;\r\n                switch (letra) {\r\n                    case \"A\": alfa = \"B\"; break;\r\n                    case \"B\": alfa = \"C\"; break;\r\n                    case \"C\": alfa = \"D\"; break;\r\n                    case \"D\": alfa = \"E\"; break;\r\n                    case \"E\": alfa = \"F\"; break;\r\n                    case \"F\": alfa = \"G\"; break;\r\n                    case \"G\": alfa = \"H\"; break;\r\n                    case \"H\": alfa = \"I\"; break;\r\n                    case \"I\": alfa = \"J\"; break;\r\n                    case \"J\": alfa = \"K\"; break;\r\n                    case \"K\": alfa = \"L\"; break;\r\n                    case \"L\": alfa = \"M\"; break;\r\n                    case \"M\": alfa = \"N\"; break;\r\n                    case \"N\": alfa = \"O\"; break;\r\n                    case \"O\": alfa = \"P\"; break;\r\n                    case \"P\": alfa = \"Q\"; break;\r\n                    case \"Q\": alfa = \"R\"; break;\r\n                    case \"R\": alfa = \"S\"; break;\r\n                    case \"S\": alfa = \"T\"; break;\r\n                    case \"T\": alfa = \"U\"; break;\r\n                    case \"U\": alfa = \"V\"; break;\r\n                    case \"V\": alfa = \"X\"; break;\r\n                    case \"X\": alfa = \"Z\"; break;\r\n                    case \"Z\": alfa = \"A\"; break;\r\n                    default:\r\n                }\r\n\r\n                setGrt(a => ({\r\n                    ...a,\r\n                    grt2: `${alfa}${((grt.grt1.slice(1) * 1) + (row.quantidade - 1)).toString().slice(1)}`\r\n                }))\r\n            } else {\r\n                setGrt(a => ({\r\n                    ...a,\r\n                    grt2: `${grt.grt1[0]}${addZero(((grt.grt1.slice(1) * 1) + (row.quantidade - 1)), 6)}`\r\n                }))\r\n            }\r\n        }\r\n    }, [grt.grt1, grt.grt2, row.quantidade])\r\n\r\n    const [ er1, setEr1 ] = React.useState({\r\n        erro: false,\r\n        texto: ''\r\n    })\r\n    const [ er2, setEr2 ] = React.useState({\r\n        erro: false,\r\n        texto: ''\r\n    })\r\n\r\n    const VerValor = () => {\r\n        if(grt.grt1.length !== 7){\r\n            setEr1(a => ({\r\n                ...a,\r\n                erro: true,\r\n                texto: 'GRT precisa ter uma letra maiúscula e seis números'\r\n            }))\r\n        } else {\r\n            setEr1(a => ({\r\n                ...a,\r\n                erro: false,\r\n                texto: ''\r\n            }))\r\n        }\r\n        if(grt.grt2.length !== 7){\r\n            setEr2(a => ({\r\n                ...a,\r\n                erro: true,\r\n                texto: 'GRT precisa ter uma letra maiúscula e seis números'\r\n            }))\r\n        } else {\r\n            setEr2(a => ({\r\n                ...a,\r\n                erro: false,\r\n                texto: ''\r\n            }))\r\n        }\r\n    }\r\n    var validabotao = grt.grt1.length === 7 ? grt.grt2.length === 7 ? er1.erro === false ? er2.erro === false ? false : true : true : true : true;\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                open={open.open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"Validar\"\r\n                aria-describedby=\"Validar-description\"\r\n            >\r\n                <DialogTitle id=\"Validar\">\r\n                    {open.titulo}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"Validar-description\">\r\n                        {open.frase}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>\r\n                        Solicitante da GRT: {row.nome}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Quantidade solicitada: {row.quantidade}\r\n                    </Typography>\r\n                    {open.tipo === \"1\" &&\r\n                        <>\r\n                            <TextField\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                label=\"GRT inicial\"\r\n                                fullWidth\r\n                                variant=\"standard\"\r\n                                error={er1.erro}\r\n                                helperText={er1.texto}\r\n                                value={grt.grt1}\r\n                                onBlur={VerValor}\r\n                                onChange={(e) => setGrt(a => ({ ...a, grt1: e.target.value.toUpperCase().slice(0, 7) }))}\r\n                            />\r\n                            <TextField\r\n                                required\r\n                                margin=\"dense\"\r\n                                label=\"GRT Final\"\r\n                                fullWidth\r\n                                variant=\"standard\"\r\n                                error={er2.erro}\r\n                                helperText={er2.texto}\r\n                                value={grt.grt2}\r\n                                onBlur={VerValor}\r\n                                onChange={(e) => setGrt(a => ({ ...a, grt2: e.target.value.toUpperCase().slice(0, 7) }))}\r\n                            />\r\n                        </>\r\n                    }\r\n                    {open.tipo === \"2\" &&\r\n                        <>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                label=\"Motivo do cancelamento.\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows={4}\r\n                                variant=\"standard\"\r\n                                onChange={(e) => setCancelar(e.target.value)}\r\n                            />\r\n                        </>\r\n                    }\r\n                    <DialogContentText sx={{ mt: 4 }}>\r\n                        {open.texto1}\r\n                    </DialogContentText>\r\n                    <DialogContentText sx={{ mt: 2 }}>\r\n                        {open.texto2}\r\n                    </DialogContentText>\r\n                </Box>\r\n                <Button color={msg.status} >{msg.msg}</Button>\r\n                <DialogActions>\r\n                    {open.tipo === \"1\" ? <Button disabled={validabotao} color='primary' onClick={() => gerarGRT()} >Adicionar</Button> : null}\r\n                    {open.tipo === \"2\" ? <Button color='success' onClick={() => handleConfirm()} >Confirmar</Button> : null}\r\n                    <Button color='error' onClick={handleClose} >Cancelar</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={open1}\r\n                onClose={handleClose1}\r\n                aria-labelledby=\"Confirmar\"\r\n                aria-describedby=\"Confirmar-description\"\r\n            >\r\n                <DialogTitle id=\"Confirmar\">\r\n                    {row.quantidade > 1 ? \"GRT inserida com sucesso\" : \"GRTs inseridas com sucesso\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"Confirmar-description\">\r\n                        {row.quantidade > 1 ? `Foi liberado ${row.quantidade} GRTs ao despachante ${row.nome}` : `Será liberado 1 GRT ao despachante ${row.nome} sendo ela a ${response && response.GRTletra}${response && response.GRTnumero}`}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button color='success' onClick={handleClose1} >Concluir</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <TableRow\r\n                key={row._id}\r\n                hover\r\n            >\r\n                <TableCell sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                </TableCell>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    id={labelId}\r\n                    scope=\"row\"\r\n                    padding=\"none\"\r\n                >\r\n                    {row.nome}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.data}</TableCell>\r\n                <TableCell align=\"right\">{row.hora}</TableCell>\r\n                <TableCell align=\"right\">{row.quantidade}</TableCell>\r\n                <TableCell align=\"right\">{row.situacao}</TableCell>\r\n                <TableCell>\r\n                    {row.situacao === \"SOLICITADO\" && user.usuariotipo === 'master' ?\r\n                        <>\r\n                            <Tooltip title='Enviar GRT'>\r\n                                <IconButton sx={{ p: '0 5px' }} onClick={handleClickOpen0} color='primary' >\r\n                                    <AddchartIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title='Cancelar GRT'>\r\n                                <IconButton sx={{ p: '0 5px' }} onClick={handleClickOpen1} color='error' >\r\n                                    <CancelIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </>\r\n                        : null\r\n                    }\r\n                    {row.situacao === \"SOLICITADO\" && user.usuariotipo === \"despachante\" ?\r\n                        <Tooltip title=\"Solicitar o cancelamento da solicitação\">\r\n                            <IconButton\r\n                                onClick={cancelarGrt}\r\n                                color='error handleClickOpen'\r\n                            >\r\n                                <CancelIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null\r\n                    }\r\n                </TableCell>\r\n                <TableCell sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                </TableCell>\r\n            </TableRow>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}